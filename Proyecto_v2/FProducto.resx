<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="epCodigo.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 22</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="epNombre.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>122, 23</value>
  </metadata>
  <metadata name="epPrecio.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>232, 24</value>
  </metadata>
  <metadata name="epProveedor.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>331, 24</value>
  </metadata>
</root>